{{- $acapyLabel := include "acapy.label" . -}}
{{- $globalName := include "global.name"  . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "acapy.fullname" . }}
  labels:
    {{- include "acapy.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "acapy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/acapy_configmap.yaml") . | sha256sum }}
        {{- if and (not .Values.postgresql.enabled) (not .Values.global.persistence.existingSecret) }}
        checksum/configDB: {{ include (print $.Template.BasePath "/db_secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.global.persistence.existingSecret }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
    {{- with .Values.acapy.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "acapy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.acapy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.acapy.podSecurityContext | nindent 8 }}
      initContainers:
        - name: acapy-provision
          image: "{{ .Values.acapy.image.repository }}:{{ .Values.acapy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.acapy.image.pullPolicy }}
          args: [
           "-c",
           "{{ include "acapy.registerLedger" . }} \
           sleep 15; \
           aca-py provision \
           --endpoint https://{{ include "acapy.host" . }} \
           --wallet-type {{ .Values.acapy.staticArgs.walletType }} \
           --wallet-storage-type 'postgres_storage' \
           --wallet-name {{ include "acapy.database" . }} \
           --wallet-key {{ .Values.acapy.walletKey }} \
           --wallet-storage-config '{\"url\":\"{{ include "global.postgresql.fullname" . }}:{{ .Values.postgresql.service.port }}\",\"max_connections\":5}' \
           --wallet-storage-creds '{\"account\":\"{{ .Values.postgresql.postgresqlUsername }}\",\"password\":\"$(POSTGRES_PASSWORD)\",\"admin_account\":\"{{ .Values.postgresql.postgresqlUsername }}\",\"admin_password\":\"$(POSTGRES_PASSWORD)\"}' \
           --seed \"$(WALLET_SEED)\" \
           --genesis-url '{{ include "bpa.ledgerBrowser" . }}/genesis' \
           --log-level info \
           "
          ]
          command:
          - /bin/bash
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "global.postgresql.fullname" . }}
                  key: postgresql-password
            - name: WALLET_SEED
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}
                  key: seed
      containers:
        - name: acapy
          securityContext:
            {{- toYaml .Values.acapy.securityContext | nindent 12 }}
          image: "{{ .Values.acapy.image.repository }}:{{ .Values.acapy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.acapy.image.pullPolicy }}
          args: [
           "-c",
           "aca-py start \
           --arg-file acapy-static-args.yml \
           --inbound-transport http '0.0.0.0' {{ .Values.acapy.service.httpPort }} \
           --webhook-url http://{{ include "bpa.fullname" . }}:{{ .Values.bpa.service.port }}/log#{{ .Values.bpa.config.webhook.key }} \
           --genesis-transactions-list genesis-transaction-list.yaml \
           --endpoint https://{{ include "acapy.host" . }} \
           --wallet-storage-type 'postgres_storage' \
           --wallet-name {{ include "acapy.database" . }} \
           --wallet-key {{ .Values.acapy.walletKey }} \
           --wallet-storage-config '{\"url\":\"{{ include "global.postgresql.fullname" . }}:{{ .Values.postgresql.service.port }}\",\"max_connections\":5}' \
           --wallet-storage-creds '{\"account\":\"{{ .Values.postgresql.postgresqlUsername }}\",\"password\":\"$(POSTGRES_PASSWORD)\"}' \
           --admin '0.0.0.0' {{ .Values.acapy.service.adminPort }} \
           --admin-api-key {{ .Values.acapy.adminURLApiKey }} \
           --label {{ $acapyLabel }} \
           {{- if .Values.acapy.tails.enabled }}
           --tails-server-base-url {{ include "acapy.tails.baseUrl" . }} \
           --tails-server-upload-url {{ include "acapy.tails.uploadUrl" . }} \
           {{- end }}
           {{- if .Values.acapy.readOnlyMode }}
           --read-only-ledger \
           {{- end }}
           "
          ]
          command:
          - /bin/bash
          ports:
            - name: http
              containerPort: 8030
              protocol: TCP
            - name: admin
              containerPort: 8031
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "global.postgresql.fullname" . }}
                  key: postgresql-password
          livenessProbe:
            httpGet:
              path: /status/live
              port: 8031
            initialDelaySeconds: 45
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /status/ready
              port: 8031
            initialDelaySeconds: 20
            periodSeconds: 10    
          volumeMounts:
          - name: config
            mountPath: "/home/indy/acapy-static-args.yml"
            subPath: "acapy-static-args.yml"
            readOnly: true
          - name: ledger
            mountPath: "/home/indy/genesis-transaction-list.yaml"
            subPath: "genesis-transaction-list.yaml"
            readOnly: true
          resources:
            {{- toYaml .Values.acapy.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "acapy.fullname" . }}
            items:
            - key: "acapy-static-args.yaml"
              path: "acapy-static-args.yml"
        - name: ledger
          configMap:
            name: {{ include "acapy.fullname" . }}
            items:
            - key: "genesis-transaction-list.yaml"
              path: "genesis-transaction-list.yaml"
      {{- with .Values.acapy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.acapy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.acapy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}